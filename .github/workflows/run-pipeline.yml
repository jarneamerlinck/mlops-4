# This is a basic workflow to help you get started with Actions
name: run-pipeline

# Run the workflow if new data is pushed to our /raw folder
on:
  push:
    branches:    
    - 'main'
    paths:
      - 'data/raw/**.csv'
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  preprocess:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    steps: 
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Run python preprecoessing script
      - name: preprocess-step
        run: |
          echo "Running preprocessing pipeline"
          pip install pandas
          pip install numpy
          python preprocessing.py
    # Commit and push
      - name: Commit and push
        run: |-
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "Update preprocessed data: ${timestamp}" || exit 0
          git push
          
    # Run python training script
      - name: train-step
        run: |
          echo "Running model training pipeline"
          pip install scikit-learn
          python train.py
    # Commit and push
      - name: Commit and push
        run: |-
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "Update trained model: ${timestamp}" || exit 0
          git push
    # Run python training script
      - name: inference-step
        run: |
          echo "Running inference pipeline"
          python inference.py
    # Commit and push
      - name: Commit and push
        run: |-
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "Update predictions: ${timestamp}" || exit 0
          git push
      

  
